[
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.BiomarkersController",
    "Method": "GetBiomarkers",
    "RelativePath": "api/Biomarkers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ElectronicHealthRecord.DTOs.BiomarkerDto, ElectronicHealthRecord, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.BiomarkersController",
    "Method": "PostBiomarker",
    "RelativePath": "api/Biomarkers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ElectronicHealthRecord.DTOs.CreateBiomarkerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.BiomarkerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.BiomarkersController",
    "Method": "GetBiomarker",
    "RelativePath": "api/Biomarkers/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.BiomarkerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.BiomarkersController",
    "Method": "PutBiomarker",
    "RelativePath": "api/Biomarkers/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ElectronicHealthRecord.DTOs.UpdateBiomarkerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.BiomarkersController",
    "Method": "DeleteBiomarker",
    "RelativePath": "api/Biomarkers/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.CalendarEventsController",
    "Method": "GetCalendarEvents",
    "RelativePath": "api/CalendarEvents",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ElectronicHealthRecord.DTOs.CalendarEventDto, ElectronicHealthRecord, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.CalendarEventsController",
    "Method": "PostCalendarEvent",
    "RelativePath": "api/CalendarEvents",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ElectronicHealthRecord.DTOs.CreateCalendarEventDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.CalendarEventDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.CalendarEventsController",
    "Method": "GetCalendarEvent",
    "RelativePath": "api/CalendarEvents/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.CalendarEventDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.CalendarEventsController",
    "Method": "PutCalendarEvent",
    "RelativePath": "api/CalendarEvents/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ElectronicHealthRecord.DTOs.UpdateCalendarEventDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.CalendarEventsController",
    "Method": "DeleteCalendarEvent",
    "RelativePath": "api/CalendarEvents/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.DiaryEntriesController",
    "Method": "GetDiaryEntries",
    "RelativePath": "api/DiaryEntries",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ElectronicHealthRecord.DTOs.DiaryEntryDto, ElectronicHealthRecord, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.DiaryEntriesController",
    "Method": "CreateDiaryEntry",
    "RelativePath": "api/DiaryEntries",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ElectronicHealthRecord.DTOs.CreateDiaryEntryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.DiaryEntryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.DiaryEntriesController",
    "Method": "GetDiaryEntry",
    "RelativePath": "api/DiaryEntries/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.DiaryEntryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.DiaryEntriesController",
    "Method": "UpdateDiaryEntry",
    "RelativePath": "api/DiaryEntries/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ElectronicHealthRecord.DTOs.UpdateDiaryEntryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.DiaryEntriesController",
    "Method": "DeleteDiaryEntry",
    "RelativePath": "api/DiaryEntries/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.FoldersController",
    "Method": "GetFolders",
    "RelativePath": "api/Folders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ElectronicHealthRecord.DTOs.FolderDto, ElectronicHealthRecord, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.FoldersController",
    "Method": "CreateFolder",
    "RelativePath": "api/Folders",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ElectronicHealthRecord.DTOs.CreateFolderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.FolderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.FoldersController",
    "Method": "GetFolder",
    "RelativePath": "api/Folders/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.FolderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.FoldersController",
    "Method": "UpdateFolder",
    "RelativePath": "api/Folders/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ElectronicHealthRecord.DTOs.UpdateFolderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.FoldersController",
    "Method": "DeleteFolder",
    "RelativePath": "api/Folders/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.MedicationsController",
    "Method": "GetMedications",
    "RelativePath": "api/Medications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ElectronicHealthRecord.DTOs.MedicationDto, ElectronicHealthRecord, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.MedicationsController",
    "Method": "PostMedication",
    "RelativePath": "api/Medications",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ElectronicHealthRecord.DTOs.CreateMedicationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.MedicationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.MedicationsController",
    "Method": "GetMedication",
    "RelativePath": "api/Medications/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.MedicationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.MedicationsController",
    "Method": "PutMedication",
    "RelativePath": "api/Medications/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ElectronicHealthRecord.DTOs.UpdateMedicationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.MedicationsController",
    "Method": "DeleteMedication",
    "RelativePath": "api/Medications/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ElectronicHealthRecord.DTOs.UserDto, ElectronicHealthRecord, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createUserDto",
        "Type": "ElectronicHealthRecord.DTOs.CreateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.UserController",
    "Method": "GetUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ElectronicHealthRecord.DTOs.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateUserDto",
        "Type": "ElectronicHealthRecord.DTOs.CreateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ElectronicHealthRecord.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]